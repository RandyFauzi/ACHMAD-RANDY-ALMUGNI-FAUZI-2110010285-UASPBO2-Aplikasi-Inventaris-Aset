package inventaris_barang;

import java.sql.SQLException;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ACHMAD RANDY AL MUGNI FAUZI - 2110010285
 */
public class Inventaris_Barang extends javax.swing.JFrame {

    private Connection con;
    private Statement stat;
    private ResultSet res;

    public Inventaris_Barang() {
        initComponents();
        setTitle("Inventaris Barang");
        koneksi();
        tabel1();
        tabel2();

        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        Dimension frameSize = getSize();
        setLocation(
                (screenSize.width - frameSize.width) / 2,
                (screenSize.height - frameSize.height) / 2);
    }

    private void tbl1() {
    }

    private void tbl2() {
    }

    private void koneksi() {
        String url = "jdbc:mysql://localhost:3306/inventory_barang";
        String user = "root";
        String password = "";

        try {
            Class.forName("com.mysql.cj.jdbc.Driver");

            // Membuka koneksi
            Connection con = DriverManager.getConnection(url, user, password);

            if (con != null) {
                try {
                    System.out.println("Berhasil terkoneksi ke database");
                    stat = con.createStatement();
                } catch (SQLException ex) {
                    Logger.getLogger(Inventaris_Barang.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } catch (ClassNotFoundException e) {
            System.out.println("JDBC Driver tidak ditemukan");
            e.printStackTrace();
        } catch (SQLException e) {
            System.out.println("Koneksi ke database gagal");
            e.printStackTrace();
        }
    }

    private void kosongkan() {
        kode.setText("");
        nama.setText("");
        tglm.setText("");
        tglk.setText("");
        jumlah.setText("");
        kondisi.setSelectedIndex(-1);
        kode.requestFocus();
    }

    private void kondisi() {
        kondisi.addItem("Baik");
        kondisi.addItem("Rusak");
        kondisi.setSelectedIndex(-1);
    }

    private void tabel1() {
        DefaultTableModel t = new DefaultTableModel();
        t.addColumn("Kode Barang");
        t.addColumn("Nama Barang");
        t.addColumn("Tanggal Masuk");
        t.addColumn("Jumlah");
        t.addColumn("Kondisi");
        tbl1.setModel(t);
        try {
            res = stat.executeQuery("select * from inventory_barang_masuk");
            while (res.next()) {
                t.addRow(new Object[]{
                    res.getString("Kd_Barang"),
                    res.getString("Nama_Barang"),
                    res.getString("Tanggal_Masuk"),
                    res.getString("Jumlah"),
                    res.getString("Kondisi")
                });
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e);
        }
    }

    private void tabel2() {
        DefaultTableModel t = new DefaultTableModel();
        t.addColumn("Kode Barang");
        t.addColumn("Nama Barang");
        t.addColumn("Tanggal Masuk");
        t.addColumn("Tanggal Keluar");
        t.addColumn("Jumlah");
        t.addColumn("Kondisi");
        tbl2.setModel(t);
        try {
            res = stat.executeQuery("select * from inventory_barang_keluar");
            while (res.next()) {
                t.addRow(new Object[]{
                    res.getString("Kd_Barang"),
                    res.getString("Nama_Barang"),
                    res.getString("Tanggal_Masuk"),
                    res.getString("Tanggal_Keluar"),
                    res.getString("Jumlah"),
                    res.getString("Kondisi")
                });
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        edit = new javax.swing.JButton();
        refresh = new javax.swing.JButton();
        clear = new javax.swing.JButton();
        exit = new javax.swing.JButton();
        kode = new javax.swing.JTextField();
        tglm = new javax.swing.JTextField();
        tglk = new javax.swing.JTextField();
        jumlah = new javax.swing.JTextField();
        masuk = new javax.swing.JButton();
        hapus1 = new javax.swing.JButton();
        hapus2 = new javax.swing.JButton();
        keluar = new javax.swing.JButton();
        nama = new javax.swing.JTextField();
        kondisi = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl2 = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        edit.setText("UPDATE");
        edit.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });
        getContentPane().add(edit);
        edit.setBounds(111, 395, 93, 29);

        refresh.setText("REFRESH");
        refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshActionPerformed(evt);
            }
        });
        getContentPane().add(refresh);
        refresh.setBounds(260, 400, 99, 29);

        clear.setText("CLEAR");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });
        getContentPane().add(clear);
        clear.setBounds(417, 395, 81, 29);

        exit.setText("KELUAR");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });
        getContentPane().add(exit);
        exit.setBounds(229, 456, 162, 50);

        kode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kodeActionPerformed(evt);
            }
        });
        getContentPane().add(kode);
        kode.setBounds(260, 140, 250, 26);

        tglm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tglmActionPerformed(evt);
            }
        });
        getContentPane().add(tglm);
        tglm.setBounds(260, 220, 250, 26);

        tglk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tglkActionPerformed(evt);
            }
        });
        getContentPane().add(tglk);
        tglk.setBounds(260, 260, 250, 26);
        getContentPane().add(jumlah);
        jumlah.setBounds(260, 300, 250, 26);

        masuk.setText("Barang Masuk");
        masuk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                masukActionPerformed(evt);
            }
        });
        getContentPane().add(masuk);
        masuk.setBounds(710, 100, 140, 29);

        hapus1.setText("Hapus");
        hapus1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapus1ActionPerformed(evt);
            }
        });
        getContentPane().add(hapus1);
        hapus1.setBounds(860, 100, 77, 29);

        hapus2.setText("Hapus");
        hapus2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapus2ActionPerformed(evt);
            }
        });
        getContentPane().add(hapus2);
        hapus2.setBounds(860, 320, 77, 29);

        keluar.setText("Barang Keluar");
        keluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                keluarActionPerformed(evt);
            }
        });
        getContentPane().add(keluar);
        keluar.setBounds(710, 320, 140, 29);

        nama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                namaActionPerformed(evt);
            }
        });
        getContentPane().add(nama);
        nama.setBounds(260, 180, 250, 26);

        kondisi.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Bagus", "Rusak" }));
        kondisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kondisiActionPerformed(evt);
            }
        });
        getContentPane().add(kondisi);
        kondisi.setBounds(260, 340, 250, 30);

        tbl2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbl2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbl2);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(550, 370, 580, 150);

        tbl1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbl1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(550, 150, 580, 150);

        jLabel1.setIcon(new javax.swing.ImageIcon("D:\\Randy Titip\\Kuliah\\Semester 5\\PBO 2\\UAS\\Assest\\Input Data.png")); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 1150, 560);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        JOptionPane.showMessageDialog(null, "Sign Out");
        System.exit(0);// TODO add your handling code here:
    }//GEN-LAST:event_exitActionPerformed

    private void namaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_namaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_namaActionPerformed

    private void kodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kodeActionPerformed
        try {
            res = stat.executeQuery("select * from Invetaris_barang_keluar where" + "'Kd_Barang ='" + kode.getText() + "'");
            while (res.next()) {
                nama.setText(res.getString("Nama_Barang"));
                tglm.setText(res.getString("Tanggal_Masuk"));
                tglk.setText(res.getString("Tanggal_Keluar"));
                jumlah.setText(res.getString("Jumlah"));
                kondisi.setSelectedItem(res.getString("Kondisi"));
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e);
        }
    }//GEN-LAST:event_kodeActionPerformed

    private void kondisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kondisiActionPerformed

    }//GEN-LAST:event_kondisiActionPerformed

    private void masukActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_masukActionPerformed
        try {
            stat.executeUpdate("insert into inventory_barang_masuk values ("
                    + "'" + kode.getText() + "',"
                    + "'" + nama.getText() + "',"
                    + "'" + tglm.getText() + "',"
                    + "'" + tglk.getText() + "',"
                    + "'" + jumlah.getText() + "',"
                    + "'" + kondisi.getSelectedItem() + "'),");

            kosongkan();
            JOptionPane.showMessageDialog(null, "Berhasil Memasukan Data ");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Ada Kesalahan : " + e);
        }
    }//GEN-LAST:event_masukActionPerformed

    private void keluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_keluarActionPerformed
        try {
            stat.executeUpdate("insert into inventory_barang_keluar values ("
                    + "'" + kode.getText() + "',"
                    + "'" + nama.getText() + "',"
                    + "'" + tglm.getText() + "',"
                    + "'" + tglk.getText() + "',"
                    + "'" + jumlah.getText() + "',"
                    + "'" + kondisi.getSelectedItem() + "')");

            this.tbl1();
            this.tbl2();
            kosongkan();
            JOptionPane.showMessageDialog(null, "Data Berhasil Dikeluarkan");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Perintah Salah : " + e);
        }
    }//GEN-LAST:event_keluarActionPerformed

    private void hapus1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapus1ActionPerformed
        int response = JOptionPane.showConfirmDialog(null, "Apakah Anda Yakin Untuk Menghapus Data Ini???", "Confirmation", JOptionPane.YES_NO_OPTION);
        if (response == JOptionPane.YES_OPTION) {
            try {
                stat.executeUpdate("delete from inventory_barang_masuk where " + kode.getText());
                JOptionPane.showMessageDialog(null, "Data Berhasil Di Hapus");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Perintah Salah : " + e);
            }
        }
    }//GEN-LAST:event_hapus1ActionPerformed

    private void hapus2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapus2ActionPerformed
        int ok = JOptionPane.showConfirmDialog(null, "Apakah Anda Yakin Untuk Menghapus Data Ini???", "Confirmation", JOptionPane.YES_NO_OPTION);
        if (ok == JOptionPane.YES_OPTION) {
           try {
                stat.executeUpdate("delete from inventory_barang_keluar where " + kode.getText());
                JOptionPane.showMessageDialog(null, "Data Berhasil Di Hapus");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Perintah Salah : " + e);
            }
        }
    }//GEN-LAST:event_hapus2ActionPerformed

    private void tbl1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl1MouseClicked
        int i = tbl1.getSelectedRow();
        if (i == -1) {
            return;
        }
        String code = (String) tbl1.getValueAt(i, 0);
        String code1 = (String) tbl1.getValueAt(i, 1);
        String code2 = (String) tbl1.getValueAt(i, 2);
        String code3 = (String) tbl1.getValueAt(i, 3);
        String code4 = (String) tbl1.getValueAt(i, 4);
        kode.setText(code);
        nama.setText(code1);
        tglm.setText(code2);
        jumlah.setText(code3);
        kondisi.setSelectedItem(code4);
    }//GEN-LAST:event_tbl1MouseClicked

    private void tbl2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl2MouseClicked
        int i = tbl2.getSelectedRow();
        if (i == -1) {
            return;
        }
        String code = (String) tbl2.getValueAt(i, 0);
        String code1 = (String) tbl2.getValueAt(i, 1);
        String code2 = (String) tbl2.getValueAt(i, 2);
        String code3 = (String) tbl2.getValueAt(i, 3);
        String code4 = (String) tbl2.getValueAt(i, 4);
        String code5 = (String) tbl2.getValueAt(i, 5);
        kode.setText(code);
        nama.setText(code1);
        tglm.setText(code2);
        tglk.setText(code3);
        jumlah.setText(code4);
        kondisi.setSelectedItem(code5);
    }//GEN-LAST:event_tbl2MouseClicked

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        kosongkan();        // TODO add your handling code here:
    }//GEN-LAST:event_clearActionPerformed

    private void refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshActionPerformed

    }//GEN-LAST:event_refreshActionPerformed

    private void tglmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tglmActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tglmActionPerformed

    private void tglkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tglkActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tglkActionPerformed

    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed
        int ok = JOptionPane.showConfirmDialog(null, "Apakah Anda Yakin Untuk Update Data Ini???", "Confirmation", JOptionPane.YES_NO_OPTION);
        try {
            String sql = "update inventory_barang_keluar set Kd_Barang=?, Nama_Barang=?, Tanggal_Masuk=?, Tanggal_Masuk=?, Jumlah=?, Kondisi=? where Kd_Barang='" + kode.getText() + "'";
            PreparedStatement st = con.prepareStatement(sql);
            if (ok == 0) {
                try {
                    st.setString(1, kode.getText());
                    st.setString(2, nama.getText());
                    st.setString(3, tglm.getText());
                    st.setString(4, tglk.getText());
                    st.setString(5, jumlah.getText());
                    st.setString(6, (String) kondisi.getSelectedItem());
                    st.executeUpdate();
                    JOptionPane.showMessageDialog(null, "Update Data Berhasil");
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Update Data Gagal");
                }
            }
        } catch (Exception e) {
        }        // TODO add your handling code here:
    }//GEN-LAST:event_editActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Inventaris_Barang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Inventaris_Barang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Inventaris_Barang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Inventaris_Barang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Inventaris_Barang().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clear;
    private javax.swing.JButton edit;
    private javax.swing.JButton exit;
    private javax.swing.JButton hapus1;
    private javax.swing.JButton hapus2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jumlah;
    private javax.swing.JButton keluar;
    private javax.swing.JTextField kode;
    private javax.swing.JComboBox<String> kondisi;
    private javax.swing.JButton masuk;
    private javax.swing.JTextField nama;
    private javax.swing.JButton refresh;
    private javax.swing.JTable tbl1;
    private javax.swing.JTable tbl2;
    private javax.swing.JTextField tglk;
    private javax.swing.JTextField tglm;
    // End of variables declaration//GEN-END:variables

}
